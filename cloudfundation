# Parâmetros (Permite a entrada de valores pelo usuário)
# ====================================================================
Parameters:
  KeyName:
    Description: Nome do par de chaves EC2 existente para acesso SSH.
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: Deve ser o nome de um par de chaves EC2 válido.

  InstanceType:
    Description: Tipo de instância EC2 (ex: t2.micro é elegível para o Free Tier).
    Type: String
     Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium

  LatestAmiId:
    Description: A AMI ID mais recente para Amazon Linux 2 (será resolvida automaticamente).
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2

# ====================================================================
# Recursos (Define os componentes da AWS a serem criados)
# ====================================================================
Resources:

  # 1. Recursos de Rede (VPC e Subnet)
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
        - Key: Name
          Value: EC2Stack-VPC

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: EC2Stack-IGW

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  Subnet:
    Type: AWS::EC2::Subnet
    DependsOn: AttachGateway
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.0.0/24
      MapPublicIpOnLaunch: 'true'
      Tags:
        - Key: Name
          Value: EC2Stack-PublicSubnet

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: EC2Stack-RouteTable

  InternetRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGateway
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref RouteTable

  SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref Subnet

  # 2. Security Group (Permite SSH)
  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Habilitar acesso SSH
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0 # Acesso de qualquer lugar (para fins de teste)
      Tags:
        - Key: Name
          Value: EC2Stack-SG

  # 3. Instância EC2
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref LatestAmiId
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      NetworkInterfaces:
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          SubnetId: !Ref Subnet
          GroupSet:
            - !Ref EC2SecurityGroup
      Tags:
        - Key: Name
          Value: CloudFormation-EC2Instance

# ====================================================================
# Saídas (Valores úteis após a criação da Stack)
# ====================================================================
Outputs:
  InstanceId:
    Description: O ID da Instância EC2 criada
    Value: !Ref EC2Instance

  PublicIP:
    Description: O Endereço IP Público da Instância EC2
    Value: !GetAtt EC2Instance.PublicIp
